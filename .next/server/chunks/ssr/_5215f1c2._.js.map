{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/lib/actions.ts"],"sourcesContent":["// app/lib/actions.ts\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\nimport { z } from 'zod';\nimport { signIn } from '@/auth';\nimport { AuthError } from 'next-auth';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nexport type ActionState = {\n  errors?: {\n    customerId?: string[];\n    amount?: string[];\n    status?: string[];\n  };\n  message?: string | null;\n};\n\nconst InvoiceFormSchema = z.object({\n  customerId: z\n    .string({ required_error: 'Please select a customer.' })\n    .min(1, 'Please select a customer.'),\n  amount: z\n    .coerce.number({ invalid_type_error: 'Please enter a valid amount.' })\n    .gt(0, 'Amount must be greater than 0.'),\n  status: z.enum(['pending', 'paid'], {\n    required_error: 'Please select an invoice status.',\n  }),\n});\n\n/* -------------------- CREATE -------------------- */\nexport async function createInvoice(\n  _prevState: ActionState,\n  formData: FormData\n): Promise<ActionState> {\n  const parsed = InvoiceFormSchema.safeParse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n\n  if (!parsed.success) {\n    const { fieldErrors } = parsed.error.flatten();\n    return { errors: fieldErrors, message: 'Missing Fields. Failed to Create Invoice.' };\n  }\n\n  const { customerId, amount, status } = parsed.data;\n  const amountInCents = Math.round(amount * 100);\n  const date = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\n\n  try {\n    await sql/* sql */`\n      INSERT INTO invoices (customer_id, amount_cents, status, date)\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n    `;\n  } catch (e) {\n    return { message: 'Database Error: Failed to Create Invoice.' };\n  }\n\n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\n/* -------------------- UPDATE -------------------- */\nexport async function updateInvoice(\n  id: string,\n  _prevState: ActionState,\n  formData: FormData\n): Promise<ActionState> {\n  const parsed = InvoiceFormSchema.safeParse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n\n  if (!parsed.success) {\n    const { fieldErrors } = parsed.error.flatten();\n    return { errors: fieldErrors, message: 'Missing Fields. Failed to Update Invoice.' };\n  }\n\n  const { customerId, amount, status } = parsed.data;\n  const amountInCents = Math.round(amount * 100);\n\n  try {\n    await sql/* sql */`\n      UPDATE invoices\n      SET customer_id = ${customerId},\n          amount_cents = ${amountInCents},\n          status = ${status}\n      WHERE id = ${id}\n    `;\n  } catch (e) {\n    return { message: 'Database Error: Failed to Update Invoice.' };\n  }\n\n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\n/* -------------------- DELETE -------------------- */\nexport async function deleteInvoice(id: string): Promise<ActionState> {\n  try {\n    await sql/* sql */`DELETE FROM invoices WHERE id = ${id}`;\n    revalidatePath('/dashboard/invoices');\n    return { message: null };\n  } catch (e) {\n    return { message: 'Database Error: Failed to Delete Invoice.' };\n  }\n}\n\n\nexport async function authenticate(\n  prevState: string | undefined,\n  formData: FormData,\n) {\n  try {\n    await signIn('credentials', formData);\n  } catch (error) {\n    if (error instanceof AuthError) {\n      switch (error.type) {\n        case 'CredentialsSignin':\n          return 'Invalid credentials.';\n        default:\n          return 'Something went wrong.';\n      }\n    }\n    throw error;\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/.next-internal/server/app/dashboard/invoices/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_0 as '0009b2e3ab362b4e1fc08cb20006ea67d00981645e'} from 'ACTIONS_MODULE0'\nexport {deleteInvoice as '40d20541dd1c0cbe9f3ab1407043aff076eaac838b'} from 'ACTIONS_MODULE1'\nexport {authenticate as '609f032d1ed2a62b48368362d9630b561204edb3d4'} from 'ACTIONS_MODULE1'\nexport {createInvoice as '60fbe5ac84d0f6c54493191bcc863bef05b5ae5d21'} from 'ACTIONS_MODULE1'\nexport {updateInvoice as '709a348353276fd511654396bb9e2bdd0630423e2b'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/invoices/pagination.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/invoices/pagination.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/invoices/pagination.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/invoices/pagination.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/invoices/pagination.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/invoices/pagination.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/search.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/search.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/search.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/search.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/search.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/search.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiQ,GAC9R,+BACA","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/invoices/buttons.tsx"],"sourcesContent":["import { PencilIcon, PlusIcon, TrashIcon } from '@heroicons/react/24/outline';\nimport Link from 'next/link';\nimport { deleteInvoice } from '@/app/lib/actions';\n\n\nexport function CreateInvoice() {\n  return (\n    <Link\n      href=\"/dashboard/invoices/create\"\n      className=\"flex h-10 items-center rounded-lg bg-blue-600 px-4 text-sm font-medium text-white transition-colors hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600\"\n    >\n      <span className=\"hidden md:block\">Create Invoice</span>{' '}\n      <PlusIcon className=\"h-5 md:ml-4\" />\n    </Link>\n  );\n}\n\nexport function UpdateInvoice({ id }: { id: string }) {\n  return (\n    <Link\n            href={`/dashboard/invoices/${id}/edit`}\n      className=\"rounded-md border p-2 hover:bg-gray-100\"\n    >\n      <PencilIcon className=\"w-5\" />\n    </Link>\n  );\n}\n\nexport function DeleteInvoice({ id }: { id: string }) {\n    const deleteInvoiceWithId = deleteInvoice.bind(null, id);\n\n  return (\n    <form action={deleteInvoiceWithId}>\n      <button type=\"submit\" className=\"rounded-md border p-2 hover:bg-gray-100\">\n        <span className=\"sr-only\">Delete</span>\n        <TrashIcon className=\"w-5\" />\n      </button>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAGO,SAAS;IACd,qBACE,6WAAC,2RAAA,CAAA,UAAI;QACH,MAAK;QACL,WAAU;;0BAEV,6WAAC;gBAAK,WAAU;0BAAkB;;;;;;YAAsB;0BACxD,6WAAC,sSAAA,CAAA,WAAQ;gBAAC,WAAU;;;;;;;;;;;;AAG1B;AAEO,SAAS,cAAc,EAAE,EAAE,EAAkB;IAClD,qBACE,6WAAC,2RAAA,CAAA,UAAI;QACG,MAAM,CAAC,oBAAoB,EAAE,GAAG,KAAK,CAAC;QAC5C,WAAU;kBAEV,cAAA,6WAAC,0SAAA,CAAA,aAAU;YAAC,WAAU;;;;;;;;;;;AAG5B;AAEO,SAAS,cAAc,EAAE,EAAE,EAAkB;IAChD,MAAM,sBAAsB,qHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,MAAM;IAEvD,qBACE,6WAAC;QAAK,QAAQ;kBACZ,cAAA,6WAAC;YAAO,MAAK;YAAS,WAAU;;8BAC9B,6WAAC;oBAAK,WAAU;8BAAU;;;;;;8BAC1B,6WAAC,wSAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/invoices/status.tsx"],"sourcesContent":["import { CheckIcon, ClockIcon } from '@heroicons/react/24/outline';\nimport clsx from 'clsx';\n\nexport default function InvoiceStatus({ status }: { status: string }) {\n  return (\n    <span\n      className={clsx(\n        'inline-flex items-center rounded-full px-2 py-1 text-xs',\n        {\n          'bg-gray-100 text-gray-500': status === 'pending',\n          'bg-green-500 text-white': status === 'paid',\n        },\n      )}\n    >\n      {status === 'pending' ? (\n        <>\n          Pending\n          <ClockIcon className=\"ml-1 w-4 text-gray-500\" />\n        </>\n      ) : null}\n      {status === 'paid' ? (\n        <>\n          Paid\n          <CheckIcon className=\"ml-1 w-4 text-white\" />\n        </>\n      ) : null}\n    </span>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;;AAEe,SAAS,cAAc,EAAE,MAAM,EAAsB;IAClE,qBACE,6WAAC;QACC,WAAW,CAAA,GAAA,sLAAA,CAAA,UAAI,AAAD,EACZ,2DACA;YACE,6BAA6B,WAAW;YACxC,2BAA2B,WAAW;QACxC;;YAGD,WAAW,0BACV;;oBAAE;kCAEA,6WAAC,wSAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;+BAErB;YACH,WAAW,uBACV;;oBAAE;kCAEA,6WAAC,wSAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;+BAErB;;;;;;;AAGV","debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/lib/utils.ts"],"sourcesContent":["import { Revenue } from './definitions';\n\nexport const formatCurrency = (amount: number) => {\n  return (amount / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n};\n\nexport const formatDateToLocal = (\n  dateStr: string,\n  locale: string = 'en-US',\n) => {\n  const date = new Date(dateStr);\n  const options: Intl.DateTimeFormatOptions = {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n  };\n  const formatter = new Intl.DateTimeFormat(locale, options);\n  return formatter.format(date);\n};\n\nexport const generateYAxis = (revenue: Revenue[]) => {\n  // Calculate what labels we need to display on the y-axis\n  // based on highest record and in 1000s\n  const yAxisLabels = [];\n  const highestRecord = Math.max(...revenue.map((month) => month.revenue));\n  const topLabel = Math.ceil(highestRecord / 1000) * 1000;\n\n  for (let i = topLabel; i >= 0; i -= 1000) {\n    yAxisLabels.push(`$${i / 1000}K`);\n  }\n\n  return { yAxisLabels, topLabel };\n};\n\nexport const generatePagination = (currentPage: number, totalPages: number) => {\n  // If the total number of pages is 7 or less,\n  // display all pages without any ellipsis.\n  if (totalPages <= 7) {\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\n  }\n\n  // If the current page is among the first 3 pages,\n  // show the first 3, an ellipsis, and the last 2 pages.\n  if (currentPage <= 3) {\n    return [1, 2, 3, '...', totalPages - 1, totalPages];\n  }\n\n  // If the current page is among the last 3 pages,\n  // show the first 2, an ellipsis, and the last 3 pages.\n  if (currentPage >= totalPages - 2) {\n    return [1, 2, '...', totalPages - 2, totalPages - 1, totalPages];\n  }\n\n  // If the current page is somewhere in the middle,\n  // show the first page, an ellipsis, the current page and its neighbors,\n  // another ellipsis, and the last page.\n  return [\n    1,\n    '...',\n    currentPage - 1,\n    currentPage,\n    currentPage + 1,\n    '...',\n    totalPages,\n  ];\n};\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,CAAC,SAAS,GAAG,EAAE,cAAc,CAAC,SAAS;QAC5C,OAAO;QACP,UAAU;IACZ;AACF;AAEO,MAAM,oBAAoB,CAC/B,SACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAsC;QAC1C,KAAK;QACL,OAAO;QACP,MAAM;IACR;IACA,MAAM,YAAY,IAAI,KAAK,cAAc,CAAC,QAAQ;IAClD,OAAO,UAAU,MAAM,CAAC;AAC1B;AAEO,MAAM,gBAAgB,CAAC;IAC5B,yDAAyD;IACzD,uCAAuC;IACvC,MAAM,cAAc,EAAE;IACtB,MAAM,gBAAgB,KAAK,GAAG,IAAI,QAAQ,GAAG,CAAC,CAAC,QAAU,MAAM,OAAO;IACtE,MAAM,WAAW,KAAK,IAAI,CAAC,gBAAgB,QAAQ;IAEnD,IAAK,IAAI,IAAI,UAAU,KAAK,GAAG,KAAK,KAAM;QACxC,YAAY,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC;IAClC;IAEA,OAAO;QAAE;QAAa;IAAS;AACjC;AAEO,MAAM,qBAAqB,CAAC,aAAqB;IACtD,6CAA6C;IAC7C,0CAA0C;IAC1C,IAAI,cAAc,GAAG;QACnB,OAAO,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAW,GAAG,CAAC,GAAG,IAAM,IAAI;IAC1D;IAEA,kDAAkD;IAClD,uDAAuD;IACvD,IAAI,eAAe,GAAG;QACpB,OAAO;YAAC;YAAG;YAAG;YAAG;YAAO,aAAa;YAAG;SAAW;IACrD;IAEA,iDAAiD;IACjD,uDAAuD;IACvD,IAAI,eAAe,aAAa,GAAG;QACjC,OAAO;YAAC;YAAG;YAAG;YAAO,aAAa;YAAG,aAAa;YAAG;SAAW;IAClE;IAEA,kDAAkD;IAClD,wEAAwE;IACxE,uCAAuC;IACvC,OAAO;QACL;QACA;QACA,cAAc;QACd;QACA,cAAc;QACd;QACA;KACD;AACH","debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/lib/data.ts"],"sourcesContent":["import postgres from 'postgres';\nimport {\n  CustomerField,\n  CustomersTableType,\n  InvoiceForm,\n  InvoicesTable,\n  LatestInvoiceRaw,\n  Revenue,\n} from './definitions';\nimport { formatCurrency } from './utils';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\n// export async function fetchRevenue() {\n//   try {\n//     // Artificially delay a response for demo purposes.\n//     // Don't do this in production :)\n\n//     console.log('Fetching revenue data...');\n//     await new Promise((resolve) => setTimeout(resolve, 3000));\n\n//    const rows = await sql/* sql */`\n//       SELECT month, amount_cents FROM revenue ORDER BY month\n//     `;\n\n//         console.log('Data fetch completed after 3 seconds.');\n\n\n//     // Se il tuo tipo Revenue è { month: string; revenue: number }\n//     return rows.map((r: any) => ({\n//       month: r.month,\n//       revenue: Number(r.amount_cents) / 100, // converte da centesimi\n//     }));\n//   }catch (error) {\n//     console.error('Database Error:', error);\n//     throw new Error('Failed to fetch revenue data.');\n//   }\n// }\n\n\n//MOCK\nexport async function fetchRevenue() {\n  return [\n    { month: '2025-07', revenue: 2500 },\n    { month: '2025-08', revenue: 3100 },\n    { month: '2025-09', revenue: 2800 },\n    { month: '2025-10', revenue: 3350 },\n  ];\n}\n\nexport async function fetchLatestInvoices() {\n  try {\n    // se le tabelle non ci sono, esci pulito\n    const reg = await sql/* sql */`\n      SELECT to_regclass('public.invoices') AS has_invoices,\n             to_regclass('public.customers') AS has_customers\n    `;\n    if (!reg?.[0]?.has_invoices || !reg?.[0]?.has_customers) return [];\n\n    const rows = await sql/* sql */`\n      SELECT\n        i.id,\n        COALESCE(i.amount, i.amount_cents) AS amount_cents,\n        c.name,\n        NULLIF(c.image_url,'') AS image_url,\n        NULLIF(c.email,'')     AS email\n      FROM public.invoices i\n      JOIN public.customers c ON i.customer_id = c.id\n      ORDER BY i.id DESC\n      LIMIT 5\n    `;\n\n    return rows.map((r: any) => ({\n      id: r.id,\n      name: r.name,\n      email: r.email ?? null,\n      image_url: r.image_url ?? null,\n      amount: formatCurrency(Number(r.amount_cents ?? 0)),\n    }));\n  } catch (e) {\n    console.error('fetchLatestInvoices error:', e);\n    // NON rilanciare: evita il crash della dashboard\n    return [];\n  }\n}\n\n\nexport async function fetchCardData() {\n  try {\n    const inv = await sql/* sql */`SELECT COUNT(*) AS count FROM public.invoices`;\n    const numberOfInvoices = Number(inv?.[0]?.count ?? 0);\n\n    const cust = await sql/* sql */`SELECT COUNT(*) AS count FROM public.customers`;\n    const numberOfCustomers = Number(cust?.[0]?.count ?? 0);\n\n    const stat = await sql/* sql */`\n      SELECT\n        COALESCE(SUM(CASE WHEN COALESCE(status,'paid')='paid'\n               THEN COALESCE(amount, amount_cents) ELSE 0 END),0) AS paid,\n        COALESCE(SUM(CASE WHEN COALESCE(status,'paid')='pending'\n               THEN COALESCE(amount, amount_cents) ELSE 0 END),0) AS pending\n      FROM public.invoices\n    `;\n    const totalPaidInvoices = formatCurrency(Number(stat?.[0]?.paid ?? 0));\n    const totalPendingInvoices = formatCurrency(Number(stat?.[0]?.pending ?? 0));\n\n    return { numberOfCustomers, numberOfInvoices, totalPaidInvoices, totalPendingInvoices };\n  } catch (error) {\n    console.error('fetchCardData error:', error);\n    return {\n      numberOfCustomers: 0,\n      numberOfInvoices: 0,\n      totalPaidInvoices: formatCurrency(0),\n      totalPendingInvoices: formatCurrency(0),\n    };\n  }\n}\n\n\nconst ITEMS_PER_PAGE = 6;\nexport async function fetchFilteredInvoices(query: string, currentPage: number) {\n  const offset = (currentPage - 1) * ITEMS_PER_PAGE;\n  try {\n  const rows = await sql/* sql */`\n  SELECT\n    i.id,\n    COALESCE(i.amount, i.amount_cents)                AS amount,\n    COALESCE(i.date::timestamptz, NOW()::timestamptz) AS date,\n    COALESCE(i.status,'paid')                         AS status,\n    c.name,\n    NULLIF(c.email,'')                                AS email,\n    NULLIF(c.image_url,'')                            AS image_url\n  FROM public.invoices i\n  JOIN public.customers c ON i.customer_id = c.id\n  WHERE\n    c.name ILIKE ${`%${query}%`} OR\n    c.email ILIKE ${`%${query}%`} OR\n    COALESCE(i.amount, i.amount_cents)::text ILIKE ${`%${query}%`} OR\n    COALESCE(i.date::timestamptz::text,'') ILIKE ${`%${query}%`} OR\n    COALESCE(i.status,'') ILIKE ${`%${query}%`}\n  ORDER BY COALESCE(i.date::timestamptz, NOW()::timestamptz) DESC\n  LIMIT ${ITEMS_PER_PAGE} OFFSET ${offset}\n`;\n\n    return rows as InvoicesTable[];\n  } catch (error) {\n    console.error('Database Error (fetchFilteredInvoices):', error);\n    throw new Error('Failed to fetch invoices.');\n  }\n}\n\nexport async function fetchInvoicesPages(query: string) {\n  try {\n   const data = await sql/* sql */`\n  SELECT COUNT(*) FROM (\n    SELECT 1\n    FROM public.invoices i\n    JOIN public.customers c ON i.customer_id = c.id\n    WHERE\n      c.name ILIKE ${`%${query}%`} OR\n      c.email ILIKE ${`%${query}%`} OR\n      COALESCE(i.amount, i.amount_cents)::text ILIKE ${`%${query}%`} OR\n      COALESCE(i.date::timestamptz::text,'') ILIKE ${`%${query}%`} OR\n      COALESCE(i.status,'') ILIKE ${`%${query}%`}\n  ) s\n`;\n\n    return Math.ceil(Number((data as any)[0].count) / ITEMS_PER_PAGE);\n  } catch (error) {\n    console.error('Database Error (fetchInvoicesPages):', error);\n    throw new Error('Failed to fetch total number of invoices.');\n  }\n}\n\n\nexport async function fetchInvoiceById(id: string) {\n  try {\n    const data = await sql<InvoiceForm[]>`\n      SELECT\n        invoices.id,\n        invoices.customer_id,\n        invoices.amount,\n        invoices.status\n      FROM invoices\n      WHERE invoices.id = ${id};\n    `;\n\n    const invoice = data.map((invoice) => ({\n      ...invoice,\n      // Convert amount from cents to dollars\n      amount: invoice.amount / 100,\n    }));\n\n    return invoice[0];\n  } catch (error) {\n    console.error('Database Error:', error);\n    throw new Error('Failed to fetch invoice.');\n  }\n}\n\nexport async function fetchCustomers() {\n  try {\n    const customers = await sql<CustomerField[]>`\n      SELECT\n        id,\n        name\n      FROM customers\n      ORDER BY name ASC\n    `;\n\n    return customers;\n  } catch (err) {\n    console.error('Database Error:', err);\n    throw new Error('Failed to fetch all customers.');\n  }\n}\n\nexport async function fetchFilteredCustomers(query: string) {\n  try {\n    const data = await sql<CustomersTableType[]>`\n\t\tSELECT\n\t\t  customers.id,\n\t\t  customers.name,\n\t\t  customers.email,\n\t\t  customers.image_url,\n\t\t  COUNT(invoices.id) AS total_invoices,\n\t\t  SUM(CASE WHEN invoices.status = 'pending' THEN invoices.amount ELSE 0 END) AS total_pending,\n\t\t  SUM(CASE WHEN invoices.status = 'paid' THEN invoices.amount ELSE 0 END) AS total_paid\n\t\tFROM customers\n\t\tLEFT JOIN invoices ON customers.id = invoices.customer_id\n\t\tWHERE\n\t\t  customers.name ILIKE ${`%${query}%`} OR\n        customers.email ILIKE ${`%${query}%`}\n\t\tGROUP BY customers.id, customers.name, customers.email, customers.image_url\n\t\tORDER BY customers.name ASC\n\t  `;\n\n    const customers = data.map((customer) => ({\n      ...customer,\n      total_pending: formatCurrency(customer.total_pending),\n      total_paid: formatCurrency(customer.total_paid),\n    }));\n\n    return customers;\n  } catch (err) {\n    console.error('Database Error:', err);\n    throw new Error('Failed to fetch customer table.');\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/invoices/table.tsx"],"sourcesContent":["import Image from 'next/image';\nimport { UpdateInvoice, DeleteInvoice } from '@/app/ui/invoices/buttons';\nimport InvoiceStatus from '@/app/ui/invoices/status';\nimport { formatDateToLocal, formatCurrency } from '@/app/lib/utils';\nimport { fetchFilteredInvoices } from '@/app/lib/data';\n\nfunction initials(name: string) {\n  return name\n    .split(' ')\n    .map(n => n[0])\n    .filter(Boolean)\n    .slice(0, 2)\n    .join('')\n    .toUpperCase();\n}\n\nexport default async function InvoicesTable({\n  query,\n  currentPage,\n}: {\n  query: string;\n  currentPage: number;\n}) {\n  const invoices = await fetchFilteredInvoices(query, currentPage);\n\n  return (\n    <div className=\"mt-6 flow-root\">\n      <div className=\"inline-block min-w-full align-middle\">\n        <div className=\"rounded-lg bg-gray-50 p-2 md:pt-0\">\n          {/* Mobile */}\n          <div className=\"md:hidden\">\n            {invoices?.map((invoice: any) => {\n              const hasImg = !!invoice.image_url?.trim?.();\n              return (\n                <div key={invoice.id} className=\"mb-2 w-full rounded-md bg-white p-4\">\n                  <div className=\"flex items-center justify-between border-b pb-4\">\n                    <div>\n                      <div className=\"mb-2 flex items-center\">\n                        {hasImg ? (\n                          <Image\n                            src={invoice.image_url}\n                            className=\"mr-2 rounded-full\"\n                            width={28}\n                            height={28}\n                            alt={`${invoice.name}'s profile picture`}\n                          />\n                        ) : (\n                          <div className=\"mr-2 flex h-7 w-7 items-center justify-center rounded-full bg-gray-200 text-[10px] font-semibold text-gray-600\">\n                            {initials(invoice.name)}\n                          </div>\n                        )}\n                        <p>{invoice.name}</p>\n                      </div>\n                      {invoice.email ? (\n                        <p className=\"text-sm text-gray-500\">{invoice.email}</p>\n                      ) : null}\n                    </div>\n                    {invoice.status ? <InvoiceStatus status={invoice.status} /> : null}\n                  </div>\n                  <div className=\"flex w-full items-center justify-between pt-4\">\n                    <div>\n                      <p className=\"text-xl font-medium\">\n                        {formatCurrency(invoice.amount)}\n                      </p>\n                      {invoice.date ? <p>{formatDateToLocal(invoice.date)}</p> : null}\n                    </div>\n                    <div className=\"flex justify-end gap-2\">\n                      <UpdateInvoice id={invoice.id} />\n                      <DeleteInvoice id={invoice.id} />\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Desktop */}\n          <table className=\"hidden min-w-full text-gray-900 md:table\">\n            <thead className=\"rounded-lg text-left text-sm font-normal\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-5 font-medium sm:pl-6\">Customer</th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">Email</th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">Amount</th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">Date</th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">Status</th>\n                <th scope=\"col\" className=\"relative py-3 pl-6 pr-3\">\n                  <span className=\"sr-only\">Edit</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white\">\n              {invoices?.map((invoice: any) => {\n                const hasImg = !!invoice.image_url?.trim?.();\n                return (\n                  <tr\n                    key={invoice.id}\n                    className=\"w-full border-b py-3 text-sm last-of-type:border-none\n                               [&:first-child>td:first-child]:rounded-tl-lg\n                               [&:first-child>td:last-child]:rounded-tr-lg\n                               [&:last-child>td:first-child]:rounded-bl-lg\n                               [&:last-child>td:last-child]:rounded-br-lg\"\n                  >\n                    <td className=\"whitespace-nowrap py-3 pl-6 pr-3\">\n                      <div className=\"flex items-center gap-3\">\n                        {hasImg ? (\n                          <Image\n                            src={invoice.image_url}\n                            className=\"rounded-full\"\n                            width={28}\n                            height={28}\n                            alt={`${invoice.name}'s profile picture`}\n                          />\n                        ) : (\n                          <div className=\"flex h-7 w-7 items-center justify-center rounded-full bg-gray-200 text-[10px] font-semibold text-gray-600\">\n                            {initials(invoice.name)}\n                          </div>\n                        )}\n                        <p>{invoice.name}</p>\n                      </div>\n                    </td>\n                    <td className=\"whitespace-nowrap px-3 py-3\">\n                      {invoice.email ?? <span className=\"text-gray-400\">—</span>}\n                    </td>\n                    <td className=\"whitespace-nowrap px-3 py-3\">\n                      {formatCurrency(invoice.amount)}\n                    </td>\n                    <td className=\"whitespace-nowrap px-3 py-3\">\n                      {invoice.date ? formatDateToLocal(invoice.date) : <span className=\"text-gray-400\">—</span>}\n                    </td>\n                    <td className=\"whitespace-nowrap px-3 py-3\">\n                      {invoice.status ? <InvoiceStatus status={invoice.status} /> : <span className=\"text-gray-400\">—</span>}\n                    </td>\n                    <td className=\"whitespace-nowrap py-3 pl-6 pr-3\">\n                      <div className=\"flex justify-end gap-3\">\n                        <UpdateInvoice id={invoice.id} />\n                        <DeleteInvoice id={invoice.id} />\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1191, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/skeletons.tsx"],"sourcesContent":["// Loading animation\nconst shimmer =\n  'before:absolute before:inset-0 before:-translate-x-full before:animate-[shimmer_2s_infinite] before:bg-gradient-to-r before:from-transparent before:via-white/60 before:to-transparent';\n\nexport function CardSkeleton() {\n  return (\n    <div\n      className={`${shimmer} relative overflow-hidden rounded-xl bg-gray-100 p-2 shadow-sm`}\n    >\n      <div className=\"flex p-4\">\n        <div className=\"h-5 w-5 rounded-md bg-gray-200\" />\n        <div className=\"ml-2 h-6 w-16 rounded-md bg-gray-200 text-sm font-medium\" />\n      </div>\n      <div className=\"flex items-center justify-center truncate rounded-xl bg-white px-4 py-8\">\n        <div className=\"h-7 w-20 rounded-md bg-gray-200\" />\n      </div>\n    </div>\n  );\n}\n\nexport function CardsSkeleton() {\n  return (\n    <>\n      <CardSkeleton />\n      <CardSkeleton />\n      <CardSkeleton />\n      <CardSkeleton />\n    </>\n  );\n}\n\nexport function RevenueChartSkeleton() {\n  return (\n    <div className={`${shimmer} relative w-full overflow-hidden md:col-span-4`}>\n      <div className=\"mb-4 h-8 w-36 rounded-md bg-gray-100\" />\n      <div className=\"rounded-xl bg-gray-100 p-4\">\n        <div className=\"sm:grid-cols-13 mt-0 grid h-[410px] grid-cols-12 items-end gap-2 rounded-md bg-white p-4 md:gap-4\" />\n        <div className=\"flex items-center pb-2 pt-6\">\n          <div className=\"h-5 w-5 rounded-full bg-gray-200\" />\n          <div className=\"ml-2 h-4 w-20 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function InvoiceSkeleton() {\n  return (\n    <div className=\"flex flex-row items-center justify-between border-b border-gray-100 py-4\">\n      <div className=\"flex items-center\">\n        <div className=\"mr-2 h-8 w-8 rounded-full bg-gray-200\" />\n        <div className=\"min-w-0\">\n          <div className=\"h-5 w-40 rounded-md bg-gray-200\" />\n          <div className=\"mt-2 h-4 w-12 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n      <div className=\"mt-2 h-4 w-12 rounded-md bg-gray-200\" />\n    </div>\n  );\n}\n\nexport function LatestInvoicesSkeleton() {\n  return (\n    <div\n      className={`${shimmer} relative flex w-full flex-col overflow-hidden md:col-span-4`}\n    >\n      <div className=\"mb-4 h-8 w-36 rounded-md bg-gray-100\" />\n      <div className=\"flex grow flex-col justify-between rounded-xl bg-gray-100 p-4\">\n        <div className=\"bg-white px-6\">\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n          <InvoiceSkeleton />\n        </div>\n        <div className=\"flex items-center pb-2 pt-6\">\n          <div className=\"h-5 w-5 rounded-full bg-gray-200\" />\n          <div className=\"ml-2 h-4 w-20 rounded-md bg-gray-200\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function DashboardSkeleton() {\n  return (\n    <>\n      <div\n        className={`${shimmer} relative mb-4 h-8 w-36 overflow-hidden rounded-md bg-gray-100`}\n      />\n      <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-4\">\n        <CardSkeleton />\n        <CardSkeleton />\n        <CardSkeleton />\n        <CardSkeleton />\n      </div>\n      <div className=\"mt-6 grid grid-cols-1 gap-6 md:grid-cols-4 lg:grid-cols-8\">\n        <RevenueChartSkeleton />\n        <LatestInvoicesSkeleton />\n      </div>\n    </>\n  );\n}\n\nexport function TableRowSkeleton() {\n  return (\n    <tr className=\"w-full border-b border-gray-100 last-of-type:border-none [&:first-child>td:first-child]:rounded-tl-lg [&:first-child>td:last-child]:rounded-tr-lg [&:last-child>td:first-child]:rounded-bl-lg [&:last-child>td:last-child]:rounded-br-lg\">\n      {/* Customer Name and Image */}\n      <td className=\"relative overflow-hidden whitespace-nowrap py-3 pl-6 pr-3\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"h-8 w-8 rounded-full bg-gray-100\"></div>\n          <div className=\"h-6 w-24 rounded bg-gray-100\"></div>\n        </div>\n      </td>\n      {/* Email */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-32 rounded bg-gray-100\"></div>\n      </td>\n      {/* Amount */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Date */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Status */}\n      <td className=\"whitespace-nowrap px-3 py-3\">\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </td>\n      {/* Actions */}\n      <td className=\"whitespace-nowrap py-3 pl-6 pr-3\">\n        <div className=\"flex justify-end gap-3\">\n          <div className=\"h-[38px] w-[38px] rounded bg-gray-100\"></div>\n          <div className=\"h-[38px] w-[38px] rounded bg-gray-100\"></div>\n        </div>\n      </td>\n    </tr>\n  );\n}\n\nexport function InvoicesMobileSkeleton() {\n  return (\n    <div className=\"mb-2 w-full rounded-md bg-white p-4\">\n      <div className=\"flex items-center justify-between border-b border-gray-100 pb-8\">\n        <div className=\"flex items-center\">\n          <div className=\"mr-2 h-8 w-8 rounded-full bg-gray-100\"></div>\n          <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n        </div>\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n      </div>\n      <div className=\"flex w-full items-center justify-between pt-4\">\n        <div>\n          <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\n          <div className=\"mt-2 h-6 w-24 rounded bg-gray-100\"></div>\n        </div>\n        <div className=\"flex justify-end gap-2\">\n          <div className=\"h-10 w-10 rounded bg-gray-100\"></div>\n          <div className=\"h-10 w-10 rounded bg-gray-100\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function InvoicesTableSkeleton() {\n  return (\n    <div className=\"mt-6 flow-root\">\n      <div className=\"inline-block min-w-full align-middle\">\n        <div className=\"rounded-lg bg-gray-50 p-2 md:pt-0\">\n          <div className=\"md:hidden\">\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n            <InvoicesMobileSkeleton />\n          </div>\n          <table className=\"hidden min-w-full text-gray-900 md:table\">\n            <thead className=\"rounded-lg text-left text-sm font-normal\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-5 font-medium sm:pl-6\">\n                  Customer\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Email\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Amount\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Date\n                </th>\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\n                  Status\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"relative pb-4 pl-3 pr-6 pt-2 sm:pr-6\"\n                >\n                  <span className=\"sr-only\">Edit</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white\">\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n              <TableRowSkeleton />\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1964, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/dashboard/invoices/page.tsx"],"sourcesContent":["import Pagination from '@/app/ui/invoices/pagination';\nimport Search from '@/app/ui/search';\nimport Table from '@/app/ui/invoices/table';\nimport { CreateInvoice } from '@/app/ui/invoices/buttons';\nimport { lusitana } from '@/app/ui/fonts';\nimport { Suspense } from 'react';\nimport { InvoicesTableSkeleton } from '@/app/ui/skeletons';\nimport { fetchInvoicesPages } from '@/app/lib/data';\nimport { Metadata } from 'next';\n \nexport const metadata: Metadata = {\n  title: 'Invoices',\n};\n\n \nexport default async function Page(props: {\n  searchParams?: Promise<{\n    query?: string;\n    page?: string;\n  }>;\n}) {\n  const searchParams = await props.searchParams;\n  const query = searchParams?.query || '';\n  const currentPage = Number(searchParams?.page) || 1;\n  const totalPages = await fetchInvoicesPages(query);\n\n \n  return (\n    <div className=\"w-full\">\n      <div className=\"flex w-full items-center justify-between\">\n        <h1 className={`${lusitana.className} text-2xl`}>Invoices</h1>\n      </div>\n      <div className=\"mt-4 flex items-center justify-between gap-2 md:mt-8\">\n        <Search placeholder=\"Search invoices...\" />\n        <CreateInvoice />\n      </div>\n      <Suspense key={query + currentPage} fallback={<InvoicesTableSkeleton />}>\n        <Table query={query} currentPage={currentPage} />\n      </Suspense>\n      <div className=\"mt-5 flex w-full justify-center\">\n       <Pagination totalPages={totalPages} />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;AAGO,MAAM,WAAqB;IAChC,OAAO;AACT;AAGe,eAAe,KAAK,KAKlC;IACC,MAAM,eAAe,MAAM,MAAM,YAAY;IAC7C,MAAM,QAAQ,cAAc,SAAS;IACrC,MAAM,cAAc,OAAO,cAAc,SAAS;IAClD,MAAM,aAAa,MAAM,CAAA,GAAA,kHAAA,CAAA,qBAAkB,AAAD,EAAE;IAG5C,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAG,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;8BAAE;;;;;;;;;;;0BAEnD,6WAAC;gBAAI,WAAU;;kCACb,6WAAC,oHAAA,CAAA,UAAM;wBAAC,aAAY;;;;;;kCACpB,6WAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;0BAEhB,6WAAC,oUAAA,CAAA,WAAQ;gBAA2B,wBAAU,6WAAC,uHAAA,CAAA,wBAAqB;;;;;0BAClE,cAAA,6WAAC,+HAAA,CAAA,UAAK;oBAAC,OAAO;oBAAO,aAAa;;;;;;eADrB,QAAQ;;;;;0BAGvB,6WAAC;gBAAI,WAAU;0BACd,cAAA,6WAAC,oIAAA,CAAA,UAAU;oBAAC,YAAY;;;;;;;;;;;;;;;;;AAI/B","debugId":null}}]
}