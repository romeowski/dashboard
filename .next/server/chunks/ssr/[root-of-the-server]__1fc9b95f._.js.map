{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/dashboard/nav-links.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/dashboard/nav-links.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/dashboard/nav-links.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/dashboard/nav-links.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/dashboard/nav-links.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/dashboard/nav-links.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/acme-logo.tsx"],"sourcesContent":["import { GlobeAltIcon } from '@heroicons/react/24/outline';\nimport { lusitana } from '@/app/ui/fonts';\n\nexport default function AcmeLogo() {\n  return (\n    <div\n      className={`${lusitana.className} flex flex-row items-center leading-none text-white`}\n    >\n      <GlobeAltIcon className=\"h-12 w-12 rotate-[15deg]\" />\n      <p className=\"text-[44px]\">Acme</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;AAEe,SAAS;IACtB,qBACE,6WAAC;QACC,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,mDAAmD,CAAC;;0BAErF,6WAAC,8SAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;0BACxB,6WAAC;gBAAE,WAAU;0BAAc;;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/auth.config.ts"],"sourcesContent":["// auth.config.ts\nimport type { NextAuthConfig } from 'next-auth';\n\nconst authConfig: NextAuthConfig = {\n  pages: {\n    signIn: '/login',\n  },\n  session: { strategy: 'jwt' },\n  callbacks: {\n    authorized({ auth, request: { nextUrl } }) {\n      const isLoggedIn = !!auth?.user;\n      const isOnDashboard = nextUrl.pathname.startsWith('/dashboard');\n      if (isOnDashboard) return isLoggedIn;\n      if (isLoggedIn) return Response.redirect(new URL('/dashboard', nextUrl));\n      return true;\n    },\n  },\n  providers: [], // i provider li dichiareremo in auth.ts\n};\n\nexport default authConfig;\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AAGjB,MAAM,aAA6B;IACjC,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QAAE,UAAU;IAAM;IAC3B,WAAW;QACT,YAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YACvC,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,gBAAgB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,eAAe,OAAO;YAC1B,IAAI,YAAY,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,cAAc;YAC/D,OAAO;QACT;IACF;IACA,WAAW,EAAE;AACf;uCAEe","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/auth.ts"],"sourcesContent":["// auth.ts\nimport NextAuth from 'next-auth';\nimport Credentials from 'next-auth/providers/credentials';\nimport authConfig from './auth.config';\nimport { z } from 'zod';\nimport bcrypt from 'bcrypt';\nimport postgres from 'postgres';\n\n// DB client\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\n// Modella l'utente che leggi dal DB\ntype DBUser = {\n  id: number | string;\n  name: string | null;\n  email: string;\n  password: string; // hash bcrypt\n};\n\n// Recupera un utente dal DB\nasync function getUser(email: string): Promise<DBUser | null> {\n  const rows = await sql/* sql */`\n    SELECT id, name, email, password\n    FROM users\n    WHERE email = ${email}\n    LIMIT 1\n  `;\n  return rows[0] ?? null;\n}\n\n// Validazione delle credenziali del form di login\nconst CredentialsSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(6),\n});\n\nexport const { handlers, auth, signIn, signOut } = NextAuth({\n  ...authConfig,\n  providers: [\n    Credentials({\n      name: 'Credentials',\n      authorize: async (credentials) => {\n        const parsed = CredentialsSchema.safeParse(credentials);\n        if (!parsed.success) return null;\n\n        const { email, password } = parsed.data;\n        const user = await getUser(email);\n        if (!user) return null;\n\n        const ok = await bcrypt.compare(password, user.password);\n        if (!ok) return null;\n\n        // return \"public\" user object per la session\n        return { id: String(user.id), name: user.name ?? user.email, email: user.email };\n      },\n    }),\n  ],\n  // (facoltativo) callback per includere info extra nel JWT/session\n  // callbacks: { jwt, session, ... }\n});\n"],"names":[],"mappings":"AAAA,UAAU;;;;;;;AACV;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;AAEA,YAAY;AACZ,MAAM,MAAM,CAAA,GAAA,6LAAA,CAAA,UAAQ,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AAUjE,4BAA4B;AAC5B,eAAe,QAAQ,KAAa;IAClC,MAAM,OAAO,MAAM,IAAG,OAAO,GAAE,CAAC;;;kBAGhB,EAAE,MAAM;;EAExB,CAAC;IACD,OAAO,IAAI,CAAC,EAAE,IAAI;AACpB;AAEA,kDAAkD;AAClD,MAAM,oBAAoB,mOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,OAAO,mOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;IACvB,UAAU,mOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;AAC3B;AAEO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wVAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D,GAAG,8GAAA,CAAA,UAAU;IACb,WAAW;QACT,CAAA,GAAA,sNAAA,CAAA,UAAW,AAAD,EAAE;YACV,MAAM;YACN,WAAW,OAAO;gBAChB,MAAM,SAAS,kBAAkB,SAAS,CAAC;gBAC3C,IAAI,CAAC,OAAO,OAAO,EAAE,OAAO;gBAE5B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,OAAO,IAAI;gBACvC,MAAM,OAAO,MAAM,QAAQ;gBAC3B,IAAI,CAAC,MAAM,OAAO;gBAElB,MAAM,KAAK,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;gBACvD,IAAI,CAAC,IAAI,OAAO;gBAEhB,6CAA6C;gBAC7C,OAAO;oBAAE,IAAI,OAAO,KAAK,EAAE;oBAAG,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK;oBAAE,OAAO,KAAK,KAAK;gBAAC;YACjF;QACF;KACD;AAGH","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/ui/dashboard/sidenav.tsx"],"sourcesContent":["import Link from 'next/link';\nimport NavLinks from '@/app/ui/dashboard/nav-links';\nimport AcmeLogo from '@/app/ui/acme-logo';\nimport { PowerIcon } from '@heroicons/react/24/outline';\nimport { signOut } from '@/auth';\n\n\nexport default function SideNav() {\n  return (\n    <div className=\"flex h-full flex-col px-3 py-4 md:px-2\">\n      <Link\n        className=\"mb-2 flex h-20 items-end justify-start rounded-md bg-blue-600 p-4 md:h-40\"\n        href=\"/\"\n      >\n        <div className=\"w-32 text-white md:w-40\">\n          <AcmeLogo />\n        </div>\n      </Link>\n      <div className=\"flex grow flex-row justify-between space-x-2 md:flex-col md:space-x-0 md:space-y-2\">\n        <NavLinks />\n        <div className=\"hidden h-auto w-full grow rounded-md bg-gray-50 md:block\"></div>\n        <form\n          action={async () => {\n            'use server';\n            await signOut({ redirectTo: '/' });\n          }}\n        >\n          <button className=\"flex h-[48px] w-full grow items-center justify-center gap-2 rounded-md bg-gray-50 p-3 text-sm font-medium hover:bg-sky-100 hover:text-blue-600 md:flex-none md:justify-start md:p-2 md:px-3\">\n            <PowerIcon className=\"w-6\" />\n            <div className=\"hidden md:block\">Sign Out</div>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;MAkBkB,uCAAR;IAEE,MAAM,CAAA,GAAA,oGAAA,CAAA,UAAO,AAAD,EAAE;QAAE,YAAY;IAAI;AAClC;AAlBK,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC,2RAAA,CAAA,UAAI;gBACH,WAAU;gBACV,MAAK;0BAEL,cAAA,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC,0HAAA,CAAA,UAAQ;;;;;;;;;;;;;;;0BAGb,6WAAC;gBAAI,WAAU;;kCACb,6WAAC,uIAAA,CAAA,UAAQ;;;;;kCACT,6WAAC;wBAAI,WAAU;;;;;;kCACf,6WAAC;wBACC,QAAQ,8WAAA;kCAKR,cAAA,6WAAC;4BAAO,WAAU;;8CAChB,6WAAC,wSAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;8CACrB,6WAAC;oCAAI,WAAU;8CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM7C","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///Users/a.romeo/dashboard/dashboard/app/dashboard/layout.tsx"],"sourcesContent":["import SideNav from '@/app/ui/dashboard/sidenav';\n\nexport const experimental_ppr = true;\n\n \nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"flex h-screen flex-col md:flex-row md:overflow-hidden\">\n      <div className=\"w-full flex-none md:w-64\">\n        <SideNav />\n      </div>\n      <div className=\"flex-grow p-6 md:overflow-y-auto md:p-12\">{children}</div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;;;AAEO,MAAM,mBAAmB;AAGjB,SAAS,OAAO,EAAE,QAAQ,EAAiC;IACxE,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC,kIAAA,CAAA,UAAO;;;;;;;;;;0BAEV,6WAAC;gBAAI,WAAU;0BAA4C;;;;;;;;;;;;AAGjE","debugId":null}}]
}